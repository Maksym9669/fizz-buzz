{"version":3,"sources":["components/Header.js","components/Login.js","components/Results.js","components/Button.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","style","href","class","marginLeft","this","props","authorized","username","Component","Login","onSubmit","type","onChange","Results","currentValue","Button","onClick","onIterate","Game","backgroundColor","components_Results","components_Button","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","welcome","bind","assertThisInitialized","handleChange","getData","event","setState","target","value","data","score","id","axios","method","url","concat","config","headers","Content-Type","then","res","console","log","_this2","result","catch","error","preventDefault","components_Header","components_Game","components_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9daf9385.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"../styles/Header.css\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header className=\"App-header\">\r\n        Fizz Buzz Challenge\r\n        <a style={{}} href=\"https://github.com/Maksym9669\">\r\n          {\" \"}\r\n          <i class=\"fab fa-github\" />\r\n        </a>\r\n        <span style={{ marginLeft: \"15px\" }}>\r\n          {this.props.authorized ? \"Welcome, \" + this.props.username : null}\r\n        </span>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Login.css\";\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"row\">\r\n        <div class=\"offset-md-2 col-sm-12 col-md-8 offset-md-2 \">\r\n          <div class=\"login\">\r\n            <form onSubmit={this.props.onSubmit}>\r\n              <div class=\"row row-content\">\r\n                <div class=\"col-sm-12 col-md-6 \">\r\n                  <p>Enter your username: </p>\r\n                </div>\r\n                <div class=\"col-sm-12 col-md-6 \">\r\n                  <input type=\"text\" onChange={this.props.onChange} />\r\n                </div>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-danger btn-button\">\r\n                Register\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Results.css\";\r\n\r\nclass Results extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p>Score: {this.props.currentValue}</p>\r\n        <p>\r\n          FizzBuzz value:{\" \"}\r\n          {this.props.currentValue % 15 === 0\r\n            ? \"FizzBuzz\"\r\n            : this.props.currentValue % 3 === 0\r\n            ? \"Fizz\"\r\n            : this.props.currentValue % 5 === 0\r\n            ? \"Buzz\"\r\n            : this.props.currentValue}\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Results;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Button.css\";\r\nclass Button extends Component {\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"btn btn-danger btn-button\"\r\n        onClick={this.props.onIterate}\r\n      >\r\n        Increment\r\n      </button>\r\n    );\r\n  }\r\n}\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport \"../styles/Game.css\";\r\nimport Results from \"./Results\";\r\nimport Button from \"./Button\";\r\nclass Game extends Component {\r\n  render() {\r\n    return (\r\n      <div class=\"row\" style={{ backgroundColor: \"rgb(220,220,220)\" }}>\r\n        <div class=\"col-8\">\r\n          <Results currentValue={this.props.currentValue} />\r\n        </div>\r\n        <div class=\"col-4\">\r\n          <Button onIterate={this.props.onIterate} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Login from \"./components/Login\";\r\nimport Game from \"./components/Game\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: \"\",\r\n      currentValue: 0,\r\n      welcome: false,\r\n      authorized: false\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n    this.onIterate = this.onIterate.bind(this);\r\n  }\r\n\r\n  handleChange(event) {\r\n    this.setState({ username: event.target.value });\r\n  }\r\n  getData(data) {\r\n    const { score, id } = data;\r\n    this.setState({ username: id, currentValue: score });\r\n  }\r\n  onIterate() {\r\n    const { username } = this.state;\r\n    this.setState({ currentValue: this.state.currentValue + 1 });\r\n    axios({\r\n      method: \"post\",\r\n      url: `https://131.247.210.6:8000/${username}`,\r\n      data: { id: this.state.username, score: this.state.currentValue },\r\n      config: { headers: { \"Content-Type\": \"multipart/form-data\" } }\r\n    }).then(res => console.log(res));\r\n  }\r\n\r\n  onSubmit(event) {\r\n    const { username } = this.state;\r\n    if (username === \"\") {\r\n      this.setState({ welcome: true, authorized: false });\r\n    } else {\r\n      this.setState({ welcome: true, authorized: true });\r\n    }\r\n    // this.setState({ welcome: true, authorized: true });\r\n    axios(`https://131.247.210.6:8000/${username}`)\r\n      .then(result => this.getData(result.data))\r\n      .catch(error => console.log(error));\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header\r\n          username={this.state.username}\r\n          authorized={this.state.authorized}\r\n        />\r\n        <div class=\"container\">\r\n          {this.state.authorized ? (\r\n            <Game\r\n              onIterate={this.onIterate}\r\n              currentValue={this.state.currentValue}\r\n            />\r\n          ) : (\r\n            <Login\r\n              onChange={this.handleChange}\r\n              username={this.state.username}\r\n              onSubmit={this.onSubmit}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}